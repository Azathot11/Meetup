{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Next.js\\\\next-project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from 'mongodb';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Add Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add meetups to  a huge list of highly active meetups list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      meetupsData: props.meetupData,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://Azathot111:Azathot@cluster0.qled7.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetups => ({\n      params: {\n        meetupId: meetups._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://Azathot111:Azathot@cluster0.qled7.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  console.log(selectedMeetup);\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    },\n    revalidate: 1\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Next.js/next-project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Head","MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","id","image","revalidate"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAqBC,QAArB,QAAoC,SAApC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE/B,sBACE;AAAA,4BACO,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAE,aAAZ;AAA0B,QAAA,OAAO,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADP,eAKE,QAAC,YAAD;AAAc,MAAA,WAAW,EAAEA,KAAK,CAACC,UAAjC;AAA8C,MAAA,KAAK,EAAED,KAAK,CAACC,UAAN,CAAiBC,KAAtE;AAA6E,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE,OAAvG;AAAgH,MAAA,WAAW,EAAEH,KAAK,CAACC,UAAN,CAAiBG;AAA9I;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CAXD;;AAaA,OAAO,eAAeC,cAAf,GAA+B;AACpC,QAAMC,MAAM,GAAI,MAAMT,WAAW,CAACU,OAAZ,CAAoB,iGAApB,CAAtB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAED,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,OAAO,GAAI,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAvB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAM;AACJC,IAAAA,QAAQ,EAAE,KADN;AAEJC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAYP,OAAO,KAAI;AAC3BQ,MAAAA,MAAM,EAAC;AACLC,QAAAA,QAAQ,EAACT,OAAO,CAACE,GAAR,CAAYQ,QAAZ;AADJ;AADoB,KAAJ,CAAnB;AAFF,GAAN;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAC3C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,iGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMc,cAAc,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AAACZ,IAAAA,GAAG,EAACf,QAAQ,CAAEsB,QAAF;AAAb,GAA1B,CAA7B;AAEAd,EAAAA,MAAM,CAACS,KAAP;AAIAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,SAAO;AACLpB,IAAAA,KAAK,EAAC;AAEJC,MAAAA,UAAU,EAAC;AACT2B,QAAAA,EAAE,EAAEJ,cAAc,CAACX,GAAf,CAAmBQ,QAAnB,EADK;AAETnB,QAAAA,KAAK,EAACsB,cAAc,CAACtB,KAFZ;AAGTC,QAAAA,OAAO,EAACqB,cAAc,CAACrB,OAHd;AAIT0B,QAAAA,KAAK,EAACL,cAAc,CAACK,KAJZ;AAKTzB,QAAAA,WAAW,EAACoB,cAAc,CAACpB;AALlB;AAFP,KADD;AAYL0B,IAAAA,UAAU,EAAC;AAZN,GAAP;AAcD;AACD,eAAe/B,aAAf","sourcesContent":["import Head from \"next/head\"\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient,ObjectId} from 'mongodb'\r\n\r\nconst MeetupDetails = (props) => {\r\n  \r\n  return (\r\n    <>\r\n           <Head>\r\n               <title>Add Meetup</title>\r\n               <meta name ='description' content='Add meetups to  a huge list of highly active meetups list'/>\r\n           </Head>\r\n      <MeetupDetail meetupsData={props.meetupData}  title={props.meetupData.title} address={props.meetupData.address} description={props.meetupData.description}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths(){\r\n  const client =  await MongoClient.connect('mongodb+srv://Azathot111:Azathot@cluster0.qled7.mongodb.net/meetups?retryWrites=true&w=majority');\r\n\r\n  const db = client.db()\r\n\r\n  const meetupsCollection= db.collection('meetups')\r\n  \r\n  const meetups =  await meetupsCollection.find({},{_id:1}).toArray()\r\n\r\n  client.close()\r\n  return{\r\n    fallback: false ,\r\n    paths:meetups.map(meetups =>({\r\n      params:{\r\n        meetupId:meetups._id.toString()\r\n      }\r\n    }))\r\n  }\r\n}\r\n\r\nexport async function getStaticProps(context){\r\n  const meetupId = context.params.meetupId;\r\n \r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Azathot111:Azathot@cluster0.qled7.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({_id:ObjectId( meetupId)});\r\n\r\n  client.close();\r\n\r\n  \r\n  \r\n  console.log(selectedMeetup)\r\n  console.log(meetupId)\r\n  return {\r\n    props:{\r\n      \r\n      meetupData:{\r\n        id: selectedMeetup._id.toString(),\r\n        title:selectedMeetup.title,\r\n        address:selectedMeetup.address,\r\n        image:selectedMeetup.image,\r\n        description:selectedMeetup.description\r\n\r\n      }\r\n    },\r\n    revalidate:1\r\n  }\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}