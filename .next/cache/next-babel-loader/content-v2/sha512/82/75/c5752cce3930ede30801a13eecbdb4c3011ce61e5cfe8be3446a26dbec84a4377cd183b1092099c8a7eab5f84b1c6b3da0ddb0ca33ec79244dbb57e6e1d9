{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Next.js\\\\next-project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Add Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add meetups to  a huge list of highly active meetups list and create your opportunities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      meetupsData: props.meetupData,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/Next.js/next-project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Head","MeetupDetail","MeetupDetails","props","meetupData","title","address","description"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAE/B,sBACE;AAAA,4BACO,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,QAAA,IAAI,EAAE,aAAZ;AAA0B,QAAA,OAAO,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADP,eAKE,QAAC,YAAD;AAAc,MAAA,WAAW,EAAEA,KAAK,CAACC,UAAjC;AAA8C,MAAA,KAAK,EAAED,KAAK,CAACC,UAAN,CAAiBC,KAAtE;AAA6E,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE,OAAvG;AAAgH,MAAA,WAAW,EAAEH,KAAK,CAACC,UAAN,CAAiBG;AAA9I;AAAA;AAAA;AAAA;AAAA,aALF;AAAA,kBADF;AASD,CAXD;;KAAML,a;;AAkEN,eAAeA,aAAf","sourcesContent":["import Head from \"next/head\"\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient,ObjectId} from 'mongodb'\r\n\r\nconst MeetupDetails = (props) => {\r\n  \r\n  return (\r\n    <>\r\n           <Head>\r\n               <title>Add Meetup</title>\r\n               <meta name ='description' content='Add meetups to  a huge list of highly active meetups list and create your opportunities'/>\r\n           </Head>\r\n      <MeetupDetail meetupsData={props.meetupData}  title={props.meetupData.title} address={props.meetupData.address} description={props.meetupData.description}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths(){\r\n  const client =  await MongoClient.connect('mongodb+srv://Azathot111:Azathot@cluster0.qled7.mongodb.net/meetups?retryWrites=true&w=majority');\r\n\r\n  const db = client.db()\r\n\r\n  const meetupsCollection= db.collection('meetups')\r\n  \r\n  const meetups =  await meetupsCollection.find({},{_id:1}).toArray()\r\n\r\n  client.close()\r\n  return{\r\n    fallback: false ,\r\n    paths:meetups.map(meetups =>({\r\n      params:{\r\n        meetupId:meetups._id.toString()\r\n      }\r\n    }))\r\n  }\r\n}\r\n\r\nexport async function getStaticProps(context){\r\n  const meetupId = context.params.meetupId;\r\n \r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Azathot111:Azathot@cluster0.qled7.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({_id:ObjectId( meetupId)});\r\n\r\n  client.close();\r\n\r\n  \r\n  \r\n  console.log(selectedMeetup)\r\n  console.log(meetupId)\r\n  return {\r\n    props:{\r\n      \r\n      meetupData:{\r\n        id: selectedMeetup._id.toString(),\r\n        title:selectedMeetup.title,\r\n        address:selectedMeetup.address,\r\n        image:selectedMeetup.image,\r\n        description:selectedMeetup.description\r\n\r\n      }\r\n    },\r\n    revalidate:1\r\n  }\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}